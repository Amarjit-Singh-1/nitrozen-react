@import "./../../base/base.scss";

.n-checkbox-container {
  position: relative;
  padding-left: pxToRem(30);
  cursor: pointer;
  font-size: pxToRem(15);
  line-height: pxToRem(15);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: $PrimaryFont;
  color: $ColorPrimaryGrey80;
  font-weight: 400;
  display: flex;
  align-items: center;
  padding: pxToRem(4.5) pxToRem(4.5) pxToRem(4.5) pxToRem(32);
  justify-content: center;
  gap: pxToRem(8);
  box-sizing: border-box;

  @media screen and (max-width: 768px) {
    font-size: pxToRem(12);
  }

  &:hover {
    color: $ColorPrimaryGrey100;
  }
}

/* Hide the browser's default checkbox */
.n-checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.n-checkbox {
  position: absolute;
  top: 0;
  left: 0;
  height: pxToRem(22);
  width: pxToRem(22);
  background-color: $WhiteColor;
  border: pxToRem(1) solid $ColorPrimaryGrey80;
  border-radius: pxToRem(3);
  transition: $TransitionsEaseQuick $TransitionsDurationRapid;

  &:hover {
    border-color: $ColorPrimary40;
  }

  @media screen and (max-width: 768px) {
    height: pxToRem(12);
    width: pxToRem(12);
    top: pxToRem(5);
    left: pxToRem(10);
  }
}

.n-checkbox-container:hover input ~ .n-checkbox {
  background-color: $WhiteColor;
}

/* When the checkbox is checked, add a blue background */
.n-checkbox-container input:checked ~ .n-checkbox {
  border-color: $ColorPrimary50;
  background-color: $ColorPrimary50;

  &:hover {
    background-color: $ColorPrimary60;
  }
}

/* Create the nitrozen-checkbox/indicator (hidden when not checked) */
.n-checkbox:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the nitrozen-checkbox when checked */
.n-checkbox-container input:checked ~ .n-checkbox:after {
  display: block;
}

/* Style the nitrozen-checkbox/indicator */
.n-checkbox-container .n-checkbox:after {
  left: pxToRem(8);
  top: pxToRem(3.5);
  width: pxToRem(4);
  height: pxToRem(10);
  border: pxToRem(1) solid $WhiteColor;
  border-width: 0 pxToRem(2) pxToRem(2) 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;

  @media screen and (max-width: 768px) {
    width: pxToRem(2);
    height: pxToRem(5);
    left: pxToRem(4);
    top: pxToRem(1.7);
  }
}
.n-checkbox-indeterminate:after {
  width: unset !important;
  transform: rotate(90deg) !important;
  left: 45% !important;
  top: 25% !important;
}

input[type="checkbox"]:disabled + .n-checkbox {
  opacity: 0.5;
  pointer-events: none;

  &::after {
    border-width: 0 pxToRem(2) pxToRem(2) 0;
  }
}

.n-checkbox-container-disabled {
  color: $CheckboxDisableColor;

  &:hover {
    color: $CheckboxDisableColor;
  }
}

.n-checkbox-validation {
  position: absolute;
  top: pxToRem(30);
  left: 0;
  width: max-content;
  @media screen and (max-width: 768px) {
    top: pxToRem(25);
    left: pxToRem(10);
  }
}

.warning-state {
  &:hover {
    border-color: $ColorFeedbackWarning50 !important;
  }
}

.success-state {
  &:hover {
    border-color: $ColorFeedbackSuccess50 !important;
  }
}

.error-state {
  &:hover {
    border-color: $ColorFeedbackError50 !important;
  }
}

.n-checkbox-container input:checked ~ .warning-state {
  border-color: $ColorFeedbackWarning50;
  background-color: $ColorFeedbackWarning50;

  &:hover {
    background-color: $ColorFeedbackWarning80;
  }
}

.n-checkbox-container input:checked ~ .success-state {
  border-color: $ColorFeedbackSuccess50;
  background-color: $ColorFeedbackSuccess50;

  &:hover {
    background-color: $ColorFeedbackSuccess80;
  }
}

.n-checkbox-container input:checked ~ .error-state {
  border-color: $ColorFeedbackError50;
  background-color: $ColorFeedbackError50;

  &:hover {
    background-color: $ColorFeedbackError80;
  }
}

.social-icon {
  position: absolute;
  left: pxToRem(-32);
  font-size: pxToRem(24);
  display: flex;
  justify-content: center;
  align-items: center;
  @media screen and (max-width: 768px) {
    height: pxToRem(16);
    width: pxToRem(16);
    top: pxToRem(5);
    left: pxToRem(-10);
  }
}
